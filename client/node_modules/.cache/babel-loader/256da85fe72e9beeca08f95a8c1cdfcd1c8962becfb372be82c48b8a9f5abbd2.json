{"ast":null,"code":"var _jsxFileName = \"/Users/tebogoramolobeng/futurtainmentbooking/client/src/components/admin/AdminUploadEvent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminUploadEvent = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    date: \"\",\n    time: \"\",\n    venue: \"\",\n    seats: \"\",\n    ticketPrice: \"\"\n  });\n  const [eventCount, setEventCount] = useState(0);\n  const maxEvents = 5;\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  useEffect(() => {\n    const fetchEventCount = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5001/api/events/count\");\n        setEventCount(response.data.count);\n      } catch (error) {\n        console.error(\"Error fetching event count\", error);\n      }\n    };\n    fetchEventCount();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (eventCount >= maxEvents) {\n      alert(\"Maximum number of events reached. You cannot upload more events.\");\n      return;\n    }\n    try {\n      await axios.post(\"http://localhost:5001/api/admin/upload-event\", formData);\n      setEventCount(eventCount + 1);\n      alert(\"Event uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Error uploading event\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Event Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: formData.title,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: formData.description,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: formData.date,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"time\",\n        value: formData.time,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Seats Numbers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"seats\",\n        value: formData.seats,\n        onChange: handleChange,\n        required: true,\n        min: \"100\",\n        max: \"500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Venue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"venue\",\n        value: formData.venue,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ticket Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"ticketPrice\",\n        value: formData.ticketPrice,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminUploadEvent, \"NLT7SEgYfRcOKdlN4rPnEqWQSd8=\");\n_c = AdminUploadEvent;\nexport default AdminUploadEvent;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const UploadEvent = () => {\n//   const [formData, setFormData] = useState({\n//     eventName: \"\",\n//     eventCategory: \"Entertainment(Tickets)\",\n//     time: \"\",\n//     seats: \"\",\n//     venue: \"\",\n//     ticketPrice: \"\",\n//   });\n//   const [eventCount, setEventCount] = useState(0);\n//   const maxEvents = 5;\n\n//   const eventCategories = [\n//     \"Entertainment(Tickets)\",\n//     \"Music\",\n//     \"Kids events\",\n//     \"Comedy\",\n//     \"Fashion shows\",\n//   ];\n\n//   const handleCategoryChange = (e) => {\n//     const { value } = e.target;\n//     setFormData({ ...formData, eventCategory: value });\n//   };\n\n//   useEffect(() => {\n//     // Fetch current number of events from the backend (example URL)\n//     const fetchEventCount = async () => {\n//       try {\n//         const response = await axios.get(\n//           \"http://localhost:5001/api/events/count\"\n//         );\n//         setEventCount(response.data.count);\n//       } catch (error) {\n//         console.error(\"Error fetching event count\", error);\n//       }\n//     };\n//     fetchEventCount();\n//   }, []);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (eventCount >= maxEvents) {\n//       alert(\"Maximum number of events reached. You cannot upload more events.\");\n//       return;\n//     }\n//     try {\n//       // Handle form submission\n//       await axios.post(\"http://localhost:5001/api/events\", formData);\n//       setEventCount(eventCount + 1);\n//       alert(\"Event uploaded successfully!\");\n//     } catch (error) {\n//       console.error(\"Error uploading event\", error);\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label>Event Name</label>\n//         <input\n//           type=\"text\"\n//           name=\"eventName\"\n//           value={formData.eventName}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Event Category</label>\n//         <select\n//           name=\"eventCategory\"\n//           value={formData.eventCategory}\n//           onChange={handleCategoryChange}\n//           required\n//         >\n//           {eventCategories.map((category) => (\n//             <option key={category} value={category}>\n//               {category}\n//             </option>\n//           ))}\n//           {formData.eventCategory === \"Music\" && (\n//             <option value=\"South African Music for 21-35 years\">\n//               South African Music for 21-35 years\n//             </option>\n//           )}\n//         </select>\n//       </div>\n//       <div>\n//         <label>Time</label>\n//         <input\n//           type=\"text\"\n//           name=\"time\"\n//           value={formData.time}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Seats Numbers</label>\n//         <input\n//           type=\"number\"\n//           name=\"seats\"\n//           value={formData.seats}\n//           onChange={handleChange}\n//           required\n//           min=\"100\"\n//           max=\"500\"\n//         />\n//       </div>\n//       <div>\n//         <label>Venue</label>\n//         <input\n//           type=\"text\"\n//           name=\"venue\"\n//           value={formData.venue}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Ticket Price</label>\n//         <input\n//           type=\"number\"\n//           name=\"ticketPrice\"\n//           value={formData.ticketPrice}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\">Upload Event</button>\n//     </form>\n//   );\n// };\n\n// export default UploadEvent;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const UploadEvent = () => {\n//   const [formData, setFormData] = useState({\n//     eventName: \"\",\n//     eventCategory: \"Entertainment(Tickets)\",\n//     time: \"\",\n//     seats: \"\",\n//     venue: \"\",\n//     ticketPrice: \"\",\n//   });\n//   const [eventCount, setEventCount] = useState(0);\n//   const maxEvents = 5;\n\n//   const eventCategories = [\n//     \"Entertainment(Tickets)\",\n//     \"Music\",\n//     \"Kids events\",\n//     \"Comedy\",\n//     \"Fashion shows\",\n//   ];\n\n//   const handleCategoryChange = (e) => {\n//     const { value } = e.target;\n//     setFormData({ ...formData, eventCategory: value });\n//   };\n\n//   useEffect(() => {\n//     // Fetch current number of events from the backend (example URL)\n//     const fetchEventCount = async () => {\n//       try {\n//         const response = await axios.get(\"/api/events/count\");\n//         setEventCount(response.data.count);\n//       } catch (error) {\n//         console.error(\"Error fetching event count\", error);\n//       }\n//     };\n//     fetchEventCount();\n//   }, []);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (eventCount >= maxEvents) {\n//       alert(\"Maximum number of events reached. You cannot upload more events.\");\n//       return;\n//     }\n//     try {\n//       // Handle form submission\n//       await axios.post(\"/api/events\", formData);\n//       setEventCount(eventCount + 1);\n//       alert(\"Event uploaded successfully!\");\n//     } catch (error) {\n//       console.error(\"Error uploading event\", error);\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label>Event Name</label>\n//         <input\n//           type=\"text\"\n//           name=\"eventName\"\n//           value={formData.eventName}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Event Category</label>\n//         <select\n//           name=\"eventCategory\"\n//           value={formData.eventCategory}\n//           onChange={handleCategoryChange}\n//           required\n//         >\n//           {eventCategories.map((category) => (\n//             <option key={category} value={category}>\n//               {category}\n//             </option>\n//           ))}\n//           {formData.eventCategory === \"Music\" && (\n//             <option value=\"South African Music for 21-35 years\">\n//               South African Music for 21-35 years\n//             </option>\n//           )}\n//         </select>\n//       </div>\n//       <div>\n//         <label>Time</label>\n//         <input\n//           type=\"text\"\n//           name=\"time\"\n//           value={formData.time}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Seats Numbers</label>\n//         <input\n//           type=\"number\"\n//           name=\"seats\"\n//           value={formData.seats}\n//           onChange={handleChange}\n//           required\n//           min=\"100\"\n//           max=\"500\"\n//         />\n//       </div>\n//       <div>\n//         <label>Venue</label>\n//         <input\n//           type=\"text\"\n//           name=\"venue\"\n//           value={formData.venue}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Ticket Price</label>\n//         <input\n//           type=\"number\"\n//           name=\"ticketPrice\"\n//           value={formData.ticketPrice}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\">Upload Event</button>\n//     </form>\n//   );\n// };\n\n// export default UploadEvent;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"./UploadPet.css\"; // Import the CSS file\n\n// const UploadPet = () => {\n//   const [form, setForm] = useState({\n//     name: \"\",\n//     animalType: \"\",\n//     age: \"\",\n//     breed: \"\",\n//     sex: \"\",\n//     colour: \"\",\n//   });\n//   const [userId, setUserId] = useState(\"\");\n\n//   useEffect(() => {\n//     const user = JSON.parse(localStorage.getItem(\"user\"));\n//     if (user && user._id) {\n//       setUserId(user._id);\n//     }\n//   }, []);\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const data = {\n//         ...form,\n//         userListed: userId,\n//         animalType: form.animalType.toLowerCase(),\n//       };\n//       await axios.post(\"/api/petlisting/add\", data);\n//       alert(\"Pet listing added successfully\");\n//     } catch (error) {\n//       console.error(\"Error adding pet listing\", error);\n//       alert(\"Failed to add pet listing\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"upload-pet-container\">\n//       <h2>Upload Pet Listing</h2>\n//       <form className=\"upload-pet-form\" onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           placeholder=\"Pet Name\"\n//           value={form.name}\n//           onChange={handleChange}\n//           required\n//         />\n//         <select\n//           name=\"animalType\"\n//           value={form.animalType}\n//           onChange={handleChange}\n//           required\n//         >\n//           <option value=\"\">Select Animal Type</option>\n//           <option value=\"dog\">Dog</option>\n//           <option value=\"cat\">Cat</option>\n//           <option value=\"rabbit\">Rabbit</option>\n//           <option value=\"bird\">Bird</option>\n//           <option value=\"reptile\">Reptile</option>\n//           <option value=\"other\">Other</option>\n//         </select>\n//         <input\n//           type=\"number\"\n//           name=\"age\"\n//           placeholder=\"Age\"\n//           value={form.age}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"breed\"\n//           placeholder=\"Breed\"\n//           value={form.breed}\n//           onChange={handleChange}\n//           required\n//         />\n//         <select name=\"sex\" value={form.sex} onChange={handleChange} required>\n//           <option value=\"\">Select Sex</option>\n//           <option value=\"male\">Male</option>\n//           <option value=\"female\">Female</option>\n//         </select>\n//         <input\n//           type=\"text\"\n//           name=\"colour\"\n//           placeholder=\"Colour\"\n//           value={form.colour}\n//           onChange={handleChange}\n//           required\n//         />\n//         <button type=\"submit\">Add Listing</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UploadPet;\nvar _c;\n$RefreshReg$(_c, \"AdminUploadEvent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminUploadEvent","_s","formData","setFormData","title","description","date","time","venue","seats","ticketPrice","eventCount","setEventCount","maxEvents","handleChange","e","name","value","target","fetchEventCount","response","get","data","count","error","console","handleSubmit","preventDefault","alert","post","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","min","max","_c","$RefreshReg$"],"sources":["/Users/tebogoramolobeng/futurtainmentbooking/client/src/components/admin/AdminUploadEvent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst AdminUploadEvent = () => {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    date: \"\",\n    time: \"\",\n    venue: \"\",\n    seats: \"\",\n    ticketPrice: \"\",\n  });\n  const [eventCount, setEventCount] = useState(0);\n  const maxEvents = 5;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  useEffect(() => {\n    const fetchEventCount = async () => {\n      try {\n        const response = await axios.get(\n          \"http://localhost:5001/api/events/count\"\n        );\n        setEventCount(response.data.count);\n      } catch (error) {\n        console.error(\"Error fetching event count\", error);\n      }\n    };\n    fetchEventCount();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (eventCount >= maxEvents) {\n      alert(\"Maximum number of events reached. You cannot upload more events.\");\n      return;\n    }\n    try {\n      await axios.post(\n        \"http://localhost:5001/api/admin/upload-event\",\n        formData\n      );\n      setEventCount(eventCount + 1);\n      alert(\"Event uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Error uploading event\", error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>Event Title</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={formData.title}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <div>\n        <label>Description</label>\n        <textarea\n          name=\"description\"\n          value={formData.description}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <div>\n        <label>Date</label>\n        <input\n          type=\"date\"\n          name=\"date\"\n          value={formData.date}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <div>\n        <label>Time</label>\n        <input\n          type=\"text\"\n          name=\"time\"\n          value={formData.time}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <div>\n        <label>Seats Numbers</label>\n        <input\n          type=\"number\"\n          name=\"seats\"\n          value={formData.seats}\n          onChange={handleChange}\n          required\n          min=\"100\"\n          max=\"500\"\n        />\n      </div>\n      <div>\n        <label>Venue</label>\n        <input\n          type=\"text\"\n          name=\"venue\"\n          value={formData.venue}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <div>\n        <label>Ticket Price</label>\n        <input\n          type=\"number\"\n          name=\"ticketPrice\"\n          value={formData.ticketPrice}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <button type=\"submit\">Upload Event</button>\n    </form>\n  );\n};\n\nexport default AdminUploadEvent;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const UploadEvent = () => {\n//   const [formData, setFormData] = useState({\n//     eventName: \"\",\n//     eventCategory: \"Entertainment(Tickets)\",\n//     time: \"\",\n//     seats: \"\",\n//     venue: \"\",\n//     ticketPrice: \"\",\n//   });\n//   const [eventCount, setEventCount] = useState(0);\n//   const maxEvents = 5;\n\n//   const eventCategories = [\n//     \"Entertainment(Tickets)\",\n//     \"Music\",\n//     \"Kids events\",\n//     \"Comedy\",\n//     \"Fashion shows\",\n//   ];\n\n//   const handleCategoryChange = (e) => {\n//     const { value } = e.target;\n//     setFormData({ ...formData, eventCategory: value });\n//   };\n\n//   useEffect(() => {\n//     // Fetch current number of events from the backend (example URL)\n//     const fetchEventCount = async () => {\n//       try {\n//         const response = await axios.get(\n//           \"http://localhost:5001/api/events/count\"\n//         );\n//         setEventCount(response.data.count);\n//       } catch (error) {\n//         console.error(\"Error fetching event count\", error);\n//       }\n//     };\n//     fetchEventCount();\n//   }, []);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (eventCount >= maxEvents) {\n//       alert(\"Maximum number of events reached. You cannot upload more events.\");\n//       return;\n//     }\n//     try {\n//       // Handle form submission\n//       await axios.post(\"http://localhost:5001/api/events\", formData);\n//       setEventCount(eventCount + 1);\n//       alert(\"Event uploaded successfully!\");\n//     } catch (error) {\n//       console.error(\"Error uploading event\", error);\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label>Event Name</label>\n//         <input\n//           type=\"text\"\n//           name=\"eventName\"\n//           value={formData.eventName}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Event Category</label>\n//         <select\n//           name=\"eventCategory\"\n//           value={formData.eventCategory}\n//           onChange={handleCategoryChange}\n//           required\n//         >\n//           {eventCategories.map((category) => (\n//             <option key={category} value={category}>\n//               {category}\n//             </option>\n//           ))}\n//           {formData.eventCategory === \"Music\" && (\n//             <option value=\"South African Music for 21-35 years\">\n//               South African Music for 21-35 years\n//             </option>\n//           )}\n//         </select>\n//       </div>\n//       <div>\n//         <label>Time</label>\n//         <input\n//           type=\"text\"\n//           name=\"time\"\n//           value={formData.time}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Seats Numbers</label>\n//         <input\n//           type=\"number\"\n//           name=\"seats\"\n//           value={formData.seats}\n//           onChange={handleChange}\n//           required\n//           min=\"100\"\n//           max=\"500\"\n//         />\n//       </div>\n//       <div>\n//         <label>Venue</label>\n//         <input\n//           type=\"text\"\n//           name=\"venue\"\n//           value={formData.venue}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Ticket Price</label>\n//         <input\n//           type=\"number\"\n//           name=\"ticketPrice\"\n//           value={formData.ticketPrice}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\">Upload Event</button>\n//     </form>\n//   );\n// };\n\n// export default UploadEvent;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const UploadEvent = () => {\n//   const [formData, setFormData] = useState({\n//     eventName: \"\",\n//     eventCategory: \"Entertainment(Tickets)\",\n//     time: \"\",\n//     seats: \"\",\n//     venue: \"\",\n//     ticketPrice: \"\",\n//   });\n//   const [eventCount, setEventCount] = useState(0);\n//   const maxEvents = 5;\n\n//   const eventCategories = [\n//     \"Entertainment(Tickets)\",\n//     \"Music\",\n//     \"Kids events\",\n//     \"Comedy\",\n//     \"Fashion shows\",\n//   ];\n\n//   const handleCategoryChange = (e) => {\n//     const { value } = e.target;\n//     setFormData({ ...formData, eventCategory: value });\n//   };\n\n//   useEffect(() => {\n//     // Fetch current number of events from the backend (example URL)\n//     const fetchEventCount = async () => {\n//       try {\n//         const response = await axios.get(\"/api/events/count\");\n//         setEventCount(response.data.count);\n//       } catch (error) {\n//         console.error(\"Error fetching event count\", error);\n//       }\n//     };\n//     fetchEventCount();\n//   }, []);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (eventCount >= maxEvents) {\n//       alert(\"Maximum number of events reached. You cannot upload more events.\");\n//       return;\n//     }\n//     try {\n//       // Handle form submission\n//       await axios.post(\"/api/events\", formData);\n//       setEventCount(eventCount + 1);\n//       alert(\"Event uploaded successfully!\");\n//     } catch (error) {\n//       console.error(\"Error uploading event\", error);\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label>Event Name</label>\n//         <input\n//           type=\"text\"\n//           name=\"eventName\"\n//           value={formData.eventName}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Event Category</label>\n//         <select\n//           name=\"eventCategory\"\n//           value={formData.eventCategory}\n//           onChange={handleCategoryChange}\n//           required\n//         >\n//           {eventCategories.map((category) => (\n//             <option key={category} value={category}>\n//               {category}\n//             </option>\n//           ))}\n//           {formData.eventCategory === \"Music\" && (\n//             <option value=\"South African Music for 21-35 years\">\n//               South African Music for 21-35 years\n//             </option>\n//           )}\n//         </select>\n//       </div>\n//       <div>\n//         <label>Time</label>\n//         <input\n//           type=\"text\"\n//           name=\"time\"\n//           value={formData.time}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Seats Numbers</label>\n//         <input\n//           type=\"number\"\n//           name=\"seats\"\n//           value={formData.seats}\n//           onChange={handleChange}\n//           required\n//           min=\"100\"\n//           max=\"500\"\n//         />\n//       </div>\n//       <div>\n//         <label>Venue</label>\n//         <input\n//           type=\"text\"\n//           name=\"venue\"\n//           value={formData.venue}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Ticket Price</label>\n//         <input\n//           type=\"number\"\n//           name=\"ticketPrice\"\n//           value={formData.ticketPrice}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\">Upload Event</button>\n//     </form>\n//   );\n// };\n\n// export default UploadEvent;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"./UploadPet.css\"; // Import the CSS file\n\n// const UploadPet = () => {\n//   const [form, setForm] = useState({\n//     name: \"\",\n//     animalType: \"\",\n//     age: \"\",\n//     breed: \"\",\n//     sex: \"\",\n//     colour: \"\",\n//   });\n//   const [userId, setUserId] = useState(\"\");\n\n//   useEffect(() => {\n//     const user = JSON.parse(localStorage.getItem(\"user\"));\n//     if (user && user._id) {\n//       setUserId(user._id);\n//     }\n//   }, []);\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const data = {\n//         ...form,\n//         userListed: userId,\n//         animalType: form.animalType.toLowerCase(),\n//       };\n//       await axios.post(\"/api/petlisting/add\", data);\n//       alert(\"Pet listing added successfully\");\n//     } catch (error) {\n//       console.error(\"Error adding pet listing\", error);\n//       alert(\"Failed to add pet listing\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"upload-pet-container\">\n//       <h2>Upload Pet Listing</h2>\n//       <form className=\"upload-pet-form\" onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           placeholder=\"Pet Name\"\n//           value={form.name}\n//           onChange={handleChange}\n//           required\n//         />\n//         <select\n//           name=\"animalType\"\n//           value={form.animalType}\n//           onChange={handleChange}\n//           required\n//         >\n//           <option value=\"\">Select Animal Type</option>\n//           <option value=\"dog\">Dog</option>\n//           <option value=\"cat\">Cat</option>\n//           <option value=\"rabbit\">Rabbit</option>\n//           <option value=\"bird\">Bird</option>\n//           <option value=\"reptile\">Reptile</option>\n//           <option value=\"other\">Other</option>\n//         </select>\n//         <input\n//           type=\"number\"\n//           name=\"age\"\n//           placeholder=\"Age\"\n//           value={form.age}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"breed\"\n//           placeholder=\"Breed\"\n//           value={form.breed}\n//           onChange={handleChange}\n//           required\n//         />\n//         <select name=\"sex\" value={form.sex} onChange={handleChange} required>\n//           <option value=\"\">Select Sex</option>\n//           <option value=\"male\">Male</option>\n//           <option value=\"female\">Female</option>\n//         </select>\n//         <input\n//           type=\"text\"\n//           name=\"colour\"\n//           placeholder=\"Colour\"\n//           value={form.colour}\n//           onChange={handleChange}\n//           required\n//         />\n//         <button type=\"submit\">Add Listing</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UploadPet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}